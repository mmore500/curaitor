name: CI
on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches:
      - '**'
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:
jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: |
          python3 -m pip install pip --upgrade
          python3 -m pip install -r requirements-dev.txt
      - run: ./lint.sh

  style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: |
          python3 -m pip install pip --upgrade
          python3 -m pip install -r requirements-dev.txt
      - run: ./style.sh

  unit-test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: |
          python3 -m pip install pip --upgrade
          python3 -m pip install -r requirements-dev.txt
      - run: ./test.sh

  binder-test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: |
          python3 -m pip install pip --upgrade
          python3 -m pip install -r requirements-dev.txt
      - run: ./binder/execute_notebooks.sh
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  binder-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ghostscript
          python3 -m pip install pip --upgrade
          python3 -m pip install -r requirements-dev.txt
      # Adapted from https://askubuntu.com/a/524368
      - run: ./binder/execute_notebooks.sh
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      # adapted from https://unix.stackexchange.com/a/545630
      - run: find -type f -name "*.pdf" -exec bash -c 'gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -dNOPAUSE -dBATCH -dQUIET -sOutputFile="new.pdf" "{}"; rm "{}"; mv "new.pdf" "{}";' {} \;
      - run: git init
      - uses: fregante/setup-git-user@v1
      - run: git commit --allow-empty -m "Initial commit"
      - uses: JamesIves/github-pages-deploy-action@4.0.0
        with:
          branch: binder # The branch the action should deploy to.
          folder: . # The folder the action should deploy.
